buildscript {
    ext{ //build.gradle에서 사용하는 전역변수를 설정
        springBootVersion = '2.1.9.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter() // 라이브러리 업로드 간단하게 하기 위해
    }
    dependencies {
        //해당 버전을 스프링부트 그레이들 플러그인의 해당 버전을 의존성으로 받겠다.
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

subprojects {


    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.humuson'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        compileOnly('org.projectlombok:lombok')
    }
}

// Type, Util 등을 정의한다
// 가능하면 사용하지 않는다
project(':intern-web-common') {
    bootJar { enabled = false }
    jar { enabled = true }
    dependencies {
        //Spring Data JPA 적용
        compile('org.springframework.boot:spring-boot-starter-data-jpa')
        compile('com.h2database:h2')
        compile("mysql:mysql-connector-java")
        // spring secuirty 5
        compile('org.springframework.boot:spring-boot-starter-security')
        compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity5')
    }
}


project(':intern-web') {
    dependencies {
        compile project(':intern-web-common')
        compile('org.springframework.boot:spring-boot-starter-web')
        // thymeleaf
        compile('org.springframework.boot:spring-boot-starter-thymeleaf')
        compile(group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '2.4.1')

        //
        compile('org.springframework.boot:spring-boot-starter-actuator')
        compile('org.springframework.boot:spring-boot-devtools')

        // api request
        compile("com.google.code.gson:gson:2.8.6")
        compile('org.apache.httpcomponents:httpclient:4.5.13')
        testCompile('org.springframework.boot:spring-boot-starter-test') // static debug 용

    }
}

project(':intern-admin') {
    dependencies {
        compile project(':intern-web-common')
        compile('org.springframework.boot:spring-boot-starter-web')
        // thymeleaf
        compile('org.springframework.boot:spring-boot-starter-thymeleaf')
        compile(group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '2.4.1')
    }
}

//project(':intern-producer-batch') {
//    dependencies {
//        compile('org.springframework.boot:spring-boot-starter-web')
//        compile('org.springframework.kafka:spring-kafka')
//        //Spring Data JPA 적용
//        compile('org.springframework.boot:spring-boot-starter-data-jpa')
//        compile('com.h2database:h2')
//        compile("mysql:mysql-connector-java")
//        compile('org.springframework.boot:spring-boot-starter-batch')
//    }
//}

project(':intern-consumer-client') {
    dependencies {
        compile project(':intern-agent-common')
        compile('org.springframework.boot:spring-boot-starter-web')
        compile('org.springframework.kafka:spring-kafka')

        compile("com.google.code.gson:gson:2.8.6")
    }
}

project(':intern-kafka-api') {
    configurations{
        all {
//        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
            exclude group: 'ch.qos.logback', module: 'logback-classic'
            exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
        }
    }
    dependencies { // 프로젝트 개발에 필요한 의조넝들을 선언하는 곳
        compile project(':intern-agent-common')

        compile('org.springframework.boot:spring-boot-starter-web')
        compile("com.google.code.gson:gson:2.8.6")

        compile('io.springfox:springfox-swagger2:2.6.1')
        compile('io.springfox:springfox-swagger-ui:2.6.1')

        //for producer
        compile('org.apache.kafka:kafka-clients:2.5.0')
        compile('org.slf4j:slf4j-simple:1.7.30')

        testCompile('org.springframework.boot:spring-boot-starter-test') // static debug 용

    }

}






project(':intern-agent-common') {
    bootJar { enabled = false }
    jar { enabled = true }
    dependencies {
        //Spring Data JPA 적용
        compile('org.springframework.boot:spring-boot-starter-data-jpa')
        compile('com.h2database:h2')
        compile("mysql:mysql-connector-java")
    }
}

project(':intern-consumer-agent') {
    dependencies {
        compile project(':intern-agent-common')

        compile('org.springframework.kafka:spring-kafka')
        compile("org.springframework.boot:spring-boot-starter-jdbc")
        compile("com.google.code.gson:gson:2.8.6")
    }
}


//project(':intern-batch') {
//    dependencies {
//        compile('org.springframework.boot:spring-boot-starter-web')
//        compile('org.springframework.kafka:spring-kafka')
//        //Spring Data JPA 적용
//        compile('org.springframework.boot:spring-boot-starter-data-jpa')
//        compile('com.h2database:h2')
//        compile("mysql:mysql-connector-java")
//        compile('org.springframework.boot:spring-boot-starter-batch')
//    }
//}
